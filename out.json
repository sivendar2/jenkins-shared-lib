{"version":"1.128.1","results":[{"check_id":"dockerfile.security.missing-user-entrypoint.missing-user-entrypoint","path":"repo\\Docker\\Dockerfile","start":{"line":5,"col":1,"offset":94},"end":{"line":5,"col":56,"offset":149},"extra":{"message":"By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.","fix":"USER non-root\nENTRYPOINT [\"java\", \"-jar\", \"/employee-department.jar\"]","metadata":{"cwe":["CWE-269: Improper Privilege Management"],"category":"security","technology":["dockerfile"],"confidence":"MEDIUM","owasp":["A04:2021 - Insecure Design"],"references":["https://owasp.org/Top10/A04_2021-Insecure_Design"],"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/dockerfile.security.missing-user-entrypoint.missing-user-entrypoint","shortlink":"https://sg.run/k281"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.kubernetes.security.run-as-non-root.run-as-non-root","path":"repo\\k8s\\department-service.yaml","start":{"line":14,"col":5,"offset":245},"end":{"line":14,"col":9,"offset":249},"extra":{"message":"When running containers in Kubernetes, it's important to ensure that they  are properly secured to prevent privilege escalation attacks.  One potential vulnerability is when a container is allowed to run  applications as the root user, which could allow an attacker to gain  access to sensitive resources. To mitigate this risk, it's recommended to  add a `securityContext` to the container, with the parameter `runAsNonRoot`  set to `true`. This will ensure that the container runs as a non-root user,  limiting the damage that could be caused by any potential attacks. By  adding a `securityContext` to the container in your Kubernetes pod, you can  help to ensure that your containerized applications are more secure and  less vulnerable to privilege escalation attacks.","fix":"spec:\n      securityContext:\n        runAsNonRoot: true #","metadata":{"references":["https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/","https://kubernetes.io/docs/concepts/policy/pod-security-policy/","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-2-set-a-user"],"category":"security","cwe":["CWE-250: Execution with Unnecessary Privileges"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"technology":["kubernetes"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.kubernetes.security.run-as-non-root.run-as-non-root","shortlink":"https://sg.run/dgP5"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext","path":"repo\\k8s\\department-service.yaml","start":{"line":16,"col":11,"offset":281},"end":{"line":16,"col":15,"offset":285},"extra":{"message":"In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks.","fix":"securityContext:\n            allowPrivilegeEscalation: false\n          name","metadata":{"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"references":["https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation","https://kubernetes.io/docs/tasks/configure-pod-container/security-context/","https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt","https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"],"category":"security","technology":["kubernetes"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext","shortlink":"https://sg.run/eleR"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key","path":"repo\\sonar-project.properties","start":{"line":9,"col":2,"offset":240},"end":{"line":9,"col":58,"offset":296},"extra":{"message":"SonarQube Docs API Key detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"source-rule-url":"https://github.com/grab/secret-scanner/blob/master/scanner/signatures/pattern.go","category":"security","technology":["secrets","sonarqube"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key","shortlink":"https://sg.run/x10P"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key","path":"repo\\sonar-project.properties","start":{"line":11,"col":1,"offset":300},"end":{"line":11,"col":65,"offset":364},"extra":{"message":"SonarQube Docs API Key detected","metadata":{"cwe":["CWE-798: Use of Hard-coded Credentials"],"source-rule-url":"https://github.com/grab/secret-scanner/blob/master/scanner/signatures/pattern.go","category":"security","technology":["secrets","sonarqube"],"confidence":"LOW","owasp":["A07:2021 - Identification and Authentication Failures"],"references":["https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Hard-coded Secrets"],"source":"https://semgrep.dev/r/generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key","shortlink":"https://sg.run/x10P"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"java.spring.security.audit.spring-sqli.spring-sqli","path":"repo\\src\\main\\java\\com\\ameya\\service\\EmployeeInfoBusinessService.java","start":{"line":46,"col":35,"offset":1911},"end":{"line":46,"col":107,"offset":1983},"extra":{"message":"Detected a string argument from a public method contract in a raw SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"category":"security","technology":["spring"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/java.spring.security.audit.spring-sqli.spring-sqli","shortlink":"https://sg.run/1Z3x"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"java.lang.security.audit.formatted-sql-string.formatted-sql-string","path":"repo\\src\\main\\java\\com\\ameya\\service\\VulnerableApp.java","start":{"line":11,"col":24,"offset":453},"end":{"line":11,"col":46,"offset":475},"extra":{"message":"Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"source-rule-url":"https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION","asvs":{"control_id":"5.3.5 Injection","control_url":"https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements","section":"V5: Validation, Sanitization and Encoding Verification Requirements","version":"4"},"references":["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html","https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps","https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"],"category":"security","technology":["java"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string","shortlink":"https://sg.run/OPXp"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli","path":"repo\\src\\main\\java\\com\\ameya\\service\\VulnerableApp.java","start":{"line":11,"col":24,"offset":453},"end":{"line":11,"col":46,"offset":475},"extra":{"message":"Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.","metadata":{"cwe":["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"],"category":"security","technology":["jdbc"],"owasp":["A01:2017 - Injection","A03:2021 - Injection"],"references":["https://owasp.org/Top10/A03_2021-Injection"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["SQL Injection"],"source":"https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli","shortlink":"https://sg.run/AvkL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"terraform.lang.security.ecr-image-scan-on-push.ecr-image-scan-on-push","path":"repo\\terraform\\Main.tf","start":{"line":9,"col":1,"offset":126},"end":{"line":9,"col":9,"offset":134},"extra":{"message":"The ECR Repository isn't configured to scan images on push","metadata":{"cwe":["CWE-1104: Use of Unmaintained Third Party Components"],"category":"security","technology":["terraform","aws"],"owasp":["A06:2021 - Vulnerable and Outdated Components"],"references":["https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Other"],"source":"https://semgrep.dev/r/terraform.lang.security.ecr-image-scan-on-push.ecr-image-scan-on-push","shortlink":"https://sg.run/R8eE"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"terraform.aws.security.aws-ecr-mutable-image-tags.aws-ecr-mutable-image-tags","path":"repo\\terraform\\Main.tf","start":{"line":9,"col":1,"offset":126},"end":{"line":11,"col":2,"offset":199},"extra":{"message":"The ECR repository allows tag mutability. Image tags could be overwritten with compromised images. ECR images should be set to IMMUTABLE to prevent code injection through image mutation. This can be done by setting `image_tag_mutability` to IMMUTABLE.","metadata":{"category":"security","technology":["terraform","aws"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"cwe":["CWE-345: Insufficient Verification of Data Authenticity"],"references":["https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_tag_mutability","https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/"],"subcategory":["audit"],"likelihood":"LOW","impact":"HIGH","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authentication"],"source":"https://semgrep.dev/r/terraform.aws.security.aws-ecr-mutable-image-tags.aws-ecr-mutable-image-tags","shortlink":"https://sg.run/ZEeL"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"terraform.aws.security.aws-cloudwatch-log-group-unencrypted.aws-cloudwatch-log-group-unencrypted","path":"repo\\terraform\\Main.tf","start":{"line":50,"col":1,"offset":1230},"end":{"line":53,"col":2,"offset":1364},"extra":{"message":"By default, AWS CloudWatch Log Group is encrypted using AWS-managed keys. However, for added security, it's recommended to configure your own AWS KMS encryption key to protect your log group in CloudWatch. You can either create a new aws_kms_key resource or use the ARN of an existing key in your AWS account to do so.","metadata":{"owasp":["A02:2021 - Cryptographic Failures"],"cwe":["CWE-732: Incorrect Permission Assignment for Critical Resource"],"technology":["aws","terraform"],"category":"security","references":["https://cwe.mitre.org/data/definitions/732.html"],"cwe2021-top25":true,"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Authorization"],"source":"https://semgrep.dev/r/terraform.aws.security.aws-cloudwatch-log-group-unencrypted.aws-cloudwatch-log-group-unencrypted","shortlink":"https://sg.run/Pg6Y"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"repo\\mvnw","start":{"line":86,"col":5,"offset":0},"end":{"line":86,"col":68,"offset":63}},{"path":"repo\\mvnw","start":{"line":121,"col":33,"offset":0},"end":{"line":121,"col":34,"offset":1}},{"path":"repo\\mvnw","start":{"line":131,"col":3,"offset":0},"end":{"line":131,"col":5,"offset":2}},{"path":"repo\\mvnw","start":{"line":132,"col":13,"offset":0},"end":{"line":132,"col":14,"offset":1}},{"path":"repo\\mvnw","start":{"line":133,"col":2,"offset":0},"end":{"line":133,"col":3,"offset":1}},{"path":"repo\\mvnw","start":{"line":187,"col":3,"offset":0},"end":{"line":187,"col":4,"offset":1}},{"path":"repo\\mvnw","start":{"line":188,"col":1,"offset":0},"end":{"line":188,"col":14,"offset":13}}]],"message":"Syntax error at line repo\\mvnw:86:\n `h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))` was unexpected","path":"repo\\mvnw","spans":[{"file":"repo\\mvnw","start":{"line":86,"col":5,"offset":0},"end":{"line":86,"col":68,"offset":63}},{"file":"repo\\mvnw","start":{"line":121,"col":33,"offset":0},"end":{"line":121,"col":34,"offset":1}},{"file":"repo\\mvnw","start":{"line":131,"col":3,"offset":0},"end":{"line":131,"col":5,"offset":2}},{"file":"repo\\mvnw","start":{"line":132,"col":13,"offset":0},"end":{"line":132,"col":14,"offset":1}},{"file":"repo\\mvnw","start":{"line":133,"col":2,"offset":0},"end":{"line":133,"col":3,"offset":1}},{"file":"repo\\mvnw","start":{"line":187,"col":3,"offset":0},"end":{"line":187,"col":4,"offset":1}},{"file":"repo\\mvnw","start":{"line":188,"col":1,"offset":0},"end":{"line":188,"col":14,"offset":13}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"repo\\.github\\workflows\\deploy.yml","start":{"line":41,"col":39,"offset":1008},"end":{"line":41,"col":42,"offset":1011}},{"path":"repo\\.github\\workflows\\deploy.yml","start":{"line":42,"col":13,"offset":1008},"end":{"line":42,"col":16,"offset":1011}}]],"message":"Syntax error at line repo\\.github\\workflows\\deploy.yml:41:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected","path":"repo\\.github\\workflows\\deploy.yml","spans":[{"file":"repo\\.github\\workflows\\deploy.yml","start":{"line":41,"col":39,"offset":1008},"end":{"line":41,"col":42,"offset":1011}},{"file":"repo\\.github\\workflows\\deploy.yml","start":{"line":42,"col":13,"offset":1008},"end":{"line":42,"col":16,"offset":1011}}]}],"paths":{"scanned":["repo\\.gitattributes","repo\\.github\\workflows\\deploy.yml","repo\\.gitignore","repo\\.mvn\\wrapper\\maven-wrapper.properties","repo\\.scannerwork\\.sonar_lock","repo\\.scannerwork\\report-task.txt","repo\\.semgrep\\sql-injection-autofix.yml","repo\\buildspec.yml","repo\\Docker\\Dockerfile","repo\\Jenkinsfile","repo\\k8s\\department-service.yaml","repo\\logs\\snyk-fix-log-20250719.txt","repo\\mvnw","repo\\mvnw.cmd","repo\\pom.xml","repo\\Readme.MD","repo\\snyk-report.json","repo\\sonar-project.properties","repo\\src\\main\\java\\com\\ameya\\controller\\EmployeeController.java","repo\\src\\main\\java\\com\\ameya\\controller\\FeedbackController.java","repo\\src\\main\\java\\com\\ameya\\controller\\ServerController.java","repo\\src\\main\\java\\com\\ameya\\EmployeeDepartmentApplication.java","repo\\src\\main\\java\\com\\ameya\\entity\\Department.java","repo\\src\\main\\java\\com\\ameya\\entity\\Employee.java","repo\\src\\main\\java\\com\\ameya\\repository\\DepartmentRepository.java","repo\\src\\main\\java\\com\\ameya\\repository\\EmployeeRepository.java","repo\\src\\main\\java\\com\\ameya\\service\\EmployeeInfoBusinessService.java","repo\\src\\main\\java\\com\\ameya\\service\\VulnerableApp.java","repo\\src\\main\\resources\\application.properties","repo\\src\\main\\resources\\application.yml","repo\\terraform\\Main.tf","repo\\terraform\\outputs.tf","repo\\terraform\\variables.tf"]},"time":{"rules":[],"rules_parse_time":2.786698818206787,"profiling_times":{"config_time":0.7945399284362793,"core_time":4.196840524673462,"ignores_time":0.002323150634765625,"total_time":4.99458909034729},"parsing_time":{"total_time":0.1286485195159912,"per_file_time":{"mean":0.006432425975799561,"std_dev":0.00028282605206570116},"very_slow_files":[]},"targets":[],"total_bytes":0,"max_memory_bytes":1130541312},"skipped_rules":[]}