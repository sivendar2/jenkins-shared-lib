graph TD
    A((Start)):::start --> B(Prepare Source\nGit Clone / ZIP / Sparse):::source
    B --> C(Scan Engine\nTool Orchestration):::engine
    C --> D[Run Scanners\nSemgrep, Snyk, CodeQL, Trivy, etc.]:::scan
    D --> E[Parse Scan Reports]:::parse
    E --> F(Read CVE Map):::map
    F --> G{Rule Match Found?}:::decision
    G -- Yes --> H(Autofix Engine):::fix
    G -- No --> I(Log and Skip):::skip
    H --> J[Generate Patch]:::patch
    J --> K(Create Branch & Commit):::commit
    K --> L[[Push PR to GitHub]]:::pr
    L --> M((End of Remediation)):::endNode
    M --> N[Trigger CI Pipeline\nRun Tests, Lint, Build]:::ci
    N --> O{CI Passed?}:::decision
    O -- Yes --> P[Trigger CD Pipeline\nDeploy to Staging/Prod]:::cd
    O -- No --> Q[Log CI Failures\nNotify Developer]:::fail

classDef start fill:#B3E5FC,stroke:#0288D1,color:#000,font-weight:bold;
classDef endNode fill:#B3E5FC,stroke:#0288D1,color:#000,font-weight:bold;
classDef source fill:#E8F5E9,stroke:#388E3C,color:#000;
classDef engine fill:#FFF3E0,stroke:#F57C00,color:#000;
classDef scan fill:#FFFDE7,stroke:#FBC02D,color:#000;
classDef parse fill:#F3E5F5,stroke:#7B1FA2,color:#000;
classDef map fill:#FBE9E7,stroke:#E64A19,color:#000;
classDef decision fill:#E1F5FE,stroke:#0288D1,color:#000,font-weight:bold;
classDef fix fill:#E0F2F1,stroke:#00796B,color:#000;
classDef skip fill:#FFEBEE,stroke:#C62828,color:#000;
classDef patch fill:#F1F8E9,stroke:#689F38,color:#000;
classDef commit fill:#EDE7F6,stroke:#512DA8,color:#000;
classDef pr fill:#E3F2FD,stroke:#1976D2,color:#000;
classDef ci fill:#E0F7FA,stroke:#00ACC1,color:#000;
classDef cd fill:#F1F8E9,stroke:#388E3C,color:#000;
classDef fail fill:#FFCDD2,stroke:#D32F2F,color:#000;
