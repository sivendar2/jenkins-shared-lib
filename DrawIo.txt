graph TD

    A((🏁 Start)):::start --> B([🔃 Clone Target Repository]):::source
    B --> C([📄 Load Vulnerability Report]):::source
    C --> D([🧠 CVE-to-Rule Mapping]):::map
    D --> E([📘 CWE → Fixer Mapping]):::map

    %% Autofix and Patch Engine
    subgraph Autofix_and_Patch_Engine
        E --> F1{"🎯 Match Found & Eligible?"}:::decision
        F1 -- No --> F5["📋 Log + Notify Developer"]:::skip
        F1 -- Yes --> F2(["⚙️ Choose Fixer Engine"]):::fix
        F2 --> G1["🛠 Semgrep Fixer"]:::fix
        F2 --> G2["☕ JavaParser Fixer"]:::fix
        F2 --> G3["📦 Snyk Patch Fixer"]:::fix
        F2 --> G4["🤖 GPT Fixer (Fallback)"]:::fix
        G1 --> H([🧪 Validate Fix]):::validate
        G2 --> H
        G3 --> H
        G4 --> H
        H --> I([📬 Create Pull Request]):::patch
    end

    %% PR Review & CI/CD
    subgraph Review_and_Merge
        I --> J(["🔁 PR Review"]):::review
        J --> K{"✅ Approved?"}:::decision
        K -- No --> L(["🛑 Request Changes"]):::fail
        K -- Yes --> M(["🚀 Merge + Trigger CI"]):::ci
        M --> N(["🧪 CI: Test, Lint, Build"]):::ci
        N --> O{"✅ CI Passed?"}:::decision
        O -- No --> P(["❗ Alert Developer"]):::fail
        O -- Yes --> Q([✅ Done]):::endNode
    end

    %% Styling
    classDef start fill:#98FB98,stroke:#333,stroke-width:2;
    classDef source fill:#E0FFFF;
    classDef map fill:#D8BFD8;
    classDef fix fill:#FFB6C1;
    classDef validate fill:#B3FFB3;
    classDef patch fill:#ADD8E6;
    classDef review fill:#F4A460;
    classDef decision fill:#D3D3D3,stroke:#000,stroke-width:2,stroke-dasharray: 5 5;
    classDef ci fill:#20B2AA;
    classDef skip fill:#FFE4E1;
    classDef fail fill:#FF6347;
    classDef endNode fill:#90EE90;
